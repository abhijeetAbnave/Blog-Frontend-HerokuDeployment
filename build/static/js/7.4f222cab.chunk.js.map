{"version":3,"sources":["pages/Home/index.js"],"names":["useStyles","makeStyles","theme","root","height","textAlign","imgBox","maxWidth","maxHeight","margin","img","input","display","connect","withRouter","props","classes","useState","setverifySpinner","blogsData","setBlogsData","useEffect","getAllBlogs","api","getApi","pwaConfig","apiEndPoint","headers","then","data","length","showWarningMessage","console","log","history","push","error","component","className","container","item","xs","map","blog","index","blog_name","blog_subtitle","moment","blog_created_timestamp","format","style","blog_content"],"mappings":"uOAmBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,OACRC,UAAW,UAEbC,OAAQ,CACNC,SAAU,MACVC,UAAW,MACXC,OAAQ,QAEVC,IAAK,CACHN,OAAQ,UACRG,SAAU,WAEZI,MAAO,CACLC,QAAS,YAgFEC,sBAAQ,KAARA,CAAcC,aA5E7B,SAAcC,GACZ,IAAMC,EAAUhB,IAChB,EAA0CiB,oBAAS,GAAnD,mBAAsBC,GAAtB,WACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAc,WAClB,IAKEC,IACGC,OADH,UACaC,EAAUC,YADvB,YACsCD,EAAUH,aAFhC,GAEwD,CACpEK,QANY,CACd,eAAgB,sBAOfC,MAAK,SAACC,GACDA,EACkB,IAAhBA,EAAKC,QACPZ,GAAiB,GACjBE,EAAaS,KAEbE,YAAmB,sBACnBb,GAAiB,KAGnBa,YAAmB,mCACnBC,QAAQC,IAAI,wBACZf,GAAiB,GACjBH,EAAMmB,QAAQC,KAAK,cAGzB,MAAOC,GACPJ,QAAQC,IAAI,0BAA2BG,KAK3C,OACE,cAAC,IAAD,CACEC,UACE,cAAC,WAAD,UACE,qBAAKC,UAAWtB,EAAQb,KAAO,kBAA/B,SACE,cAAC,IAAD,CAAMoC,WAAS,EAAf,SACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,qBAAKH,UAAU,oBAAf,SACGnB,EAAUuB,KAAI,SAACC,EAAMC,GACpB,OACE,sBAAiBN,UAAU,YAA3B,UACE,6BAAKK,EAAKE,YACV,+BAAKF,EAAKG,cAAV,KAA2BC,IAAOJ,EAAKK,wBAAwBC,OAAO,mBACtE,qBAAKX,UAAU,UAAUY,MAAO,CAAE9C,OAAQ,SAA1C,mBACA,4BAAIuC,EAAKQ,iBAJDP,eAPT","file":"static/js/7.4f222cab.chunk.js","sourcesContent":["import React, { Fragment, setState, useEffect, useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store/store\";\nimport Body from \"../../elements/Body\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from \"../../services/api\";\nimport moment from \"moment\"\n\nimport pwaConfig from \"../../pwaConfig.json\";\n\nimport {\n  showSuccessMessage,\n  showNoInternetAlert,\n  showWarningMessage,\n} from \"../../services/utility\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    textAlign: \"center\",\n  },\n  imgBox: {\n    maxWidth: \"80%\",\n    maxHeight: \"80%\",\n    margin: \"10px\",\n  },\n  img: {\n    height: \"inherit\",\n    maxWidth: \"inherit\",\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nfunction Home(props) {\n  const classes = useStyles();\n  const [verifySpinner, setverifySpinner] = useState(true);\n  const [blogsData, setBlogsData] = useState([]);\n\n  useEffect(() => {\n    getAllBlogs();\n  }, [])\n\n  const getAllBlogs = () => {\n    try {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n      };\n      const payload = {};\n      api\n        .getApi(`${pwaConfig.apiEndPoint}/${pwaConfig.getAllBlogs}`, payload, {\n          headers: headers,\n        })\n        .then((data) => {\n          if (data) {\n            if (data.length !== 0) {\n              setverifySpinner(false);\n              setBlogsData(data);\n            } else {\n              showWarningMessage(\"No Blogs are there\");\n              setverifySpinner(false);\n            }\n          } else {\n            showWarningMessage(\"No Response from API, Try again\");\n            console.log(\"No Response from API\");\n            setverifySpinner(false);\n            props.history.push(\"/login\");\n          }\n        });\n    } catch (error) {\n      console.log(\"Error Response from API\", error);\n    }\n  };\n\n\n  return (\n    <Body\n      component={\n        <Fragment key={\"FeedRails\"}>\n          <div className={classes.root + \" overflow-class\"}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className=\"m-auto loginCard \">\n                  {blogsData.map((blog, index) => {\n                    return (\n                      <div key={index} className=\"card-blog\">\n                        <h2>{blog.blog_name}</h2>\n                        <h5>{blog.blog_subtitle}, {moment(blog.blog_created_timestamp).format(\"MMM Do, YYYY\")}</h5>\n                        <div className=\"fakeimg\" style={{ height: '200px' }}>Image</div>\n                        <p>{blog.blog_content}</p>\n                      </div>\n                    )\n                  })}\n\n                  {/* <div className=\"card-blog\">\n                    <h2>TITLE HEADING</h2>\n                    <h5>Title description, Sep 2, 2017</h5>\n                    <div className=\"fakeimg\" style={{ height: '200px' }}>Image</div>\n                    <p>Some text..</p>\n                  </div> */}\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </Fragment>\n      }\n    />\n  );\n}\n\nexport default connect(null)(withRouter(Home));\n"],"sourceRoot":""}