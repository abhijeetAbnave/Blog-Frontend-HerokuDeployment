{"version":3,"sources":["pages/MyBlog/index.js"],"names":["useStyles","makeStyles","theme","root","height","textAlign","imgBox","maxWidth","maxHeight","margin","img","input","display","connect","withRouter","props","classes","useState","setverifySpinner","showEditModule","setShowEditModule","newBlog","setNewBlog","blogsData","setBlogsData","userStates","store","getState","blog_name","blog_subtitle","blog_content","blog_owner_name","blog_owner_id","blog_read_time","blog_comments","editBlogState","setEditBlog","useEffect","getAllBlogs","api","getApi","pwaConfig","apiEndPoint","getMyBlogs","headers","then","data","length","showWarningMessage","console","log","history","push","error","maxLengthValidation","object","target","value","maxLength","slice","updateEditBlocks","e","id","component","className","container","item","xs","type","onClick","disabled","map","blog","index","updatedBlog","editBlogSet","deleted","payload","_id","delete","deleteBlog","moment","blog_created_timestamp","format","style","approved","blog_approved","put","approveBlog","publishBlog","user","role","Roles","admin","isOpen","hidefunction","closeButton","onInput","placeholder","onChange","variant","ownerDetails","first_name","post","addBlog","updateBlog","editBlog"],"mappings":"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","file":"static/js/5.6ce72420.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledTooltip,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Modal,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store/store\";\r\nimport Body from \"../../elements/Body\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport api from \"../../services/api\";\r\nimport Roles from \"../../roles.json\";\r\nimport pwaConfig from \"../../pwaConfig.json\";\r\nimport {\r\n  showSuccessMessage,\r\n  showNoInternetAlert,\r\n  showWarningMessage,\r\n} from \"../../services/utility\";\r\nimport moment from \"moment\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  imgBox: {\r\n    maxWidth: \"80%\",\r\n    maxHeight: \"80%\",\r\n    margin: \"10px\",\r\n  },\r\n  img: {\r\n    height: \"inherit\",\r\n    maxWidth: \"inherit\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nfunction MyBlog(props) {\r\n  const classes = useStyles();\r\n  const [verifySpinner, setverifySpinner] = useState(true);\r\n  const [showEditModule, setShowEditModule] = useState(false);\r\n  const [newBlog, setNewBlog] = useState(false);\r\n  const [blogsData, setBlogsData] = useState([]);\r\n  const userStates = store.getState();\r\n  const [editBlogState, setEditBlog] = useState({\r\n    blog_name: \"\",\r\n    blog_subtitle: \"\",\r\n    blog_content: \"\",\r\n    blog_owner_name: \"\",\r\n    blog_owner_id: \"\",\r\n    blog_read_time: \"5 minutes\",\r\n    blog_comments: \"none\"\r\n  })\r\n\r\n  useEffect(() => {\r\n    getAllBlogs();\r\n  }, [])\r\n\r\n  const editBlogSet = (blog) => {\r\n    let updatedBlog = { ...editBlogState, ...blog }\r\n    setEditBlog(updatedBlog);\r\n  }\r\n\r\n  const getAllBlogs = () => {\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      const payload = {};\r\n      api\r\n        .getApi(`${pwaConfig.apiEndPoint}/${pwaConfig.getMyBlogs}`, payload, {\r\n          headers: headers,\r\n        })\r\n        .then((data) => {\r\n          if (data) {\r\n            if (data.length !== 0) {\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            } else {\r\n              showWarningMessage(\"No Blogs are there\");\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            }\r\n          } else {\r\n            showWarningMessage(\"No Response from API, Try again\");\r\n            console.log(\"No Response from API\");\r\n            setverifySpinner(false);\r\n            props.history.push(\"/login\");\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error Response from API\", error);\r\n    }\r\n  };\r\n\r\n  const maxLengthValidation = (object) => {\r\n    if (object.target.value.length > object.target.maxLength) {\r\n      showWarningMessage(\"Max length reached\");\r\n      object.target.value = object.target.value.slice(\r\n        0,\r\n        object.target.maxLength\r\n      );\r\n    }\r\n  };\r\n\r\n  const editBlog = () => {\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      const payload = editBlogState;\r\n      api\r\n        .put(`${pwaConfig.apiEndPoint}/${pwaConfig.updateBlog}`, payload, {\r\n          headers: headers,\r\n        })\r\n        .then((data) => {\r\n          if (data) {\r\n            if (data.length !== 0) {\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            } else {\r\n              showWarningMessage(\"No Blogs are there\");\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            }\r\n          } else {\r\n            showWarningMessage(\"No Response from API, Try again\");\r\n            console.log(\"No Response from API\");\r\n            setverifySpinner(false);\r\n            props.history.push(\"/login\");\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error Response from API\", error);\r\n    }\r\n    setNewBlog(false);\r\n    setEditBlog({\r\n      blog_name: \"\",\r\n      blog_subtitle: \"\",\r\n      blog_content: \"\",\r\n      blog_owner_name: \"\",\r\n      blog_owner_id: \"\",\r\n      blog_read_time: \"5 minutes\",\r\n      blog_comments: \"none\"\r\n    });\r\n  }\r\n\r\n  const addBlog = () => {\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      let ownerDetails = {\r\n        blog_owner_id: userStates.user._id,\r\n        blog_owner_name: userStates.user.first_name\r\n      }\r\n      const payload = {\r\n        ...editBlogState,\r\n        ...ownerDetails\r\n      };\r\n\r\n      api\r\n        .post(`${pwaConfig.apiEndPoint}/${pwaConfig.addBlog}`, payload, {\r\n          headers: headers,\r\n        })\r\n        .then((data) => {\r\n          if (data) {\r\n            if (data.length !== 0) {\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            } else {\r\n              showWarningMessage(\"No Blogs are there\");\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            }\r\n          } else {\r\n            showWarningMessage(\"No Response from API, Try again\");\r\n            console.log(\"No Response from API\");\r\n            setverifySpinner(false);\r\n            props.history.push(\"/login\");\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error Response from API\", error);\r\n    }\r\n    setNewBlog(false);\r\n    setEditBlog({\r\n      blog_name: \"\",\r\n      blog_subtitle: \"\",\r\n      blog_content: \"\",\r\n      blog_owner_name: \"\",\r\n      blog_owner_id: \"\",\r\n      blog_read_time: \"5 minutes\",\r\n      blog_comments: \"none\"\r\n    });\r\n  }\r\n\r\n  const publishBlog = (id, approved) => {\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      const payload = {\r\n        _id: id,\r\n        blog_approved: !approved\r\n      };\r\n      api\r\n        .put(`${pwaConfig.apiEndPoint}/${pwaConfig.approveBlog}`, payload, {\r\n          headers: headers,\r\n        })\r\n        .then((data) => {\r\n          if (data) {\r\n            if (data.length !== 0) {\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            } else {\r\n              showWarningMessage(\"No Blogs are there\");\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            }\r\n          } else {\r\n            showWarningMessage(\"No Response from API, Try again\");\r\n            console.log(\"No Response from API\");\r\n            setverifySpinner(false);\r\n            props.history.push(\"/login\");\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error Response from API\", error);\r\n    }\r\n  }\r\n\r\n  const deleteBlog = (id) => {\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      const payload = {\r\n        _id: id\r\n      };\r\n      api\r\n        .delete(`${pwaConfig.apiEndPoint}/${pwaConfig.deleteBlog}`, payload, {\r\n          headers: headers,\r\n        })\r\n        .then((data) => {\r\n          if (data) {\r\n            if (data.length !== 0) {\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            } else {\r\n              showWarningMessage(\"No Blogs are there\");\r\n              setverifySpinner(false);\r\n              setBlogsData(data);\r\n            }\r\n          } else {\r\n            showWarningMessage(\"No Response from API, Try again\");\r\n            console.log(\"No Response from API\");\r\n            setverifySpinner(false);\r\n            props.history.push(\"/login\");\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error Response from API\", error);\r\n    }\r\n  }\r\n\r\n  const updateEditBlocks = (e) => {\r\n\r\n    switch (e.target.id) {\r\n      case \"title\":\r\n        setEditBlog({ ...editBlogState, blog_name: e.target.value })\r\n        break;\r\n      case \"subtitle\":\r\n        setEditBlog({ ...editBlogState, blog_subtitle: e.target.value })\r\n        break;\r\n      case \"contents\":\r\n        setEditBlog({ ...editBlogState, blog_content: e.target.value })\r\n        break;\r\n      case \"read_time\":\r\n        setEditBlog({ ...editBlogState, blog_read_time: e.target.value })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const EditModal = () => {\r\n    return (\r\n      <Modal\r\n        isOpen={showEditModule}\r\n        hidefunction={() => {\r\n          setShowEditModule(!showEditModule);\r\n        }}\r\n      >\r\n        <ModalHeader closeButton>{\"Edit Blog\"}</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"row input-group-1 form-group\">\r\n            <div className=\"col-3 span-text\">\r\n              <span>Title</span>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                // inputMode=\"numeric\"\r\n                maxLength={50}\r\n                value={editBlogState.blog_name}\r\n                onInput={maxLengthValidation}\r\n                className=\"input-group-text\"\r\n                placeholder=\"Please enter Title\"\r\n                onChange={updateEditBlocks}\r\n              />{\" \"}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"row input-group-1 form-group \">\r\n            <div className=\"col-3 span-text\">\r\n              <span>Sub Title</span>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input\r\n                id=\"subtitle\"\r\n                type=\"text\"\r\n                maxLength={50}\r\n                value={editBlogState.blog_subtitle}\r\n                onInput={maxLengthValidation}\r\n                className=\"input-group-text\"\r\n                placeholder=\"Please enter Subtitle\"\r\n                onChange={updateEditBlocks}\r\n              />{\" \"}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"row input-group-1 form-group\">\r\n            <div className=\"col-3 span-text\">\r\n              <span>Contents</span>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <textarea\r\n                id=\"contents\"\r\n                type=\"text\"\r\n                // inputMode=\"numeric\"\r\n                // maxLength={10}\r\n                // onInput={maxLengthValidation}\r\n                value={editBlogState.blog_content}\r\n                className=\"input-text-area\"\r\n                placeholder=\"Contents......\"\r\n                onChange={updateEditBlocks}\r\n              />{\" \"}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"row input-group-1 form-group\">\r\n            <div className=\"col-3 span-text\">\r\n              <span>Read Time</span>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input\r\n                id=\"read_time\"\r\n                type=\"text\"\r\n                // inputMode=\"numeric\"\r\n                // maxLength={10}\r\n                // onInput={maxLengthValidation}\r\n                value={editBlogState.blog_read_time}\r\n                className=\"input-group-text\"\r\n                placeholder=\"Read time\"\r\n                onChange={updateEditBlocks}\r\n              />{\" \"}\r\n            </div>\r\n\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            onClick={() => {\r\n              setShowEditModule(false);\r\n            }}\r\n            className=\"modal-button btn btn-outline\"\r\n          >\r\n            {\" \"}\r\n            {\"Cancel\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              newBlog ? addBlog() : editBlog();\r\n              setShowEditModule(false);\r\n            }}\r\n            className=\"modal-button  btn btn-primary\"\r\n          >\r\n            {\" \"}\r\n            {newBlog ? \"Add\" : \"Update\"}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Body\r\n      component={\r\n        <Fragment key={\"FeedRails\"}>\r\n          <div className={classes.root + \" overflow-class\"}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <div className=\"m-auto loginCard \">\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"card-button\"\r\n                      id\r\n                      onClick={() => {\r\n                        setNewBlog(true);\r\n                        setShowEditModule(!showEditModule);\r\n                      }}\r\n                      disabled={false}\r\n                    >\r\n                      Add Blog\r\n                    </button>\r\n                  </div>\r\n                  {blogsData.map((blog, index) => {\r\n                    return (\r\n                      <div key={index} className=\"card-blog\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-2\">\r\n                            <button\r\n                              className=\"btn-edit-install\"\r\n                              id=\"button\"\r\n                              onClick={() => {\r\n                                setShowEditModule(!showEditModule);\r\n                                editBlogSet(blog);\r\n                              }}\r\n                            >\r\n                              <i className=\"icon-edit \"></i>\r\n                            </button>\r\n                            {/* <span className=\"nav-Text\">Edit</span> */}\r\n                          </div>\r\n                          <div className=\"col-8\">\r\n                            <h2>{blog.blog_name}</h2>\r\n                          </div>\r\n                          <div className=\"col-2\">\r\n                            <button\r\n                              className=\"btn-delete-install\"\r\n                              id=\"button\"\r\n                              disabled={blog.deleted}\r\n                              onClick={() => deleteBlog(blog._id)}\r\n                            >\r\n                              <i className=\"icon-delete \"></i>\r\n                            </button>\r\n                            {/* <span className=\"nav-Text\">Delete</span> */}\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                        <h5>{blog.blog_subtitle}, {moment(blog.blog_created_timestamp).format(\"MMM Do, YYYY\")}</h5>\r\n                        <div className=\"fakeimg\" style={{ height: '200px' }}>Image</div>\r\n                        <p>{blog.blog_content}</p>\r\n                        <div className=\"form-group\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"card-button\"\r\n                            id\r\n                            onClick={() => publishBlog(blog._id, blog.blog_approved)}\r\n                            disabled={!(userStates.user.role === Roles.admin)}\r\n                          >\r\n                            {blog.blog_approved ? \"Published\" : \"Publish\"}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          {EditModal()}\r\n        </Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default connect(null)(withRouter(MyBlog));\r\n"],"sourceRoot":""}